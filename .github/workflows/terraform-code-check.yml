name: "[Analysis] Check Terraform Code"
on:
  workflow_call:
    inputs:
      tflint_module_scan:
        required: false
        type: boolean
        description: "Whether to download the TF modules when running TFLint or not"
      checkov_deep_scan:
        required: false
        type: boolean
        description: "Whether to download external modules when running Checkov scan"
        default: false
      repo:
        required: false
        type: string
        default: ${{ github.repository }}
        description: "Specify the org/repo of the repo containing Terraform code. Normally left blank to clone calling repo."
      ref:
        required: false
        type: string
        default: ${{ github.ref }}
        description: "Specify the branch of the Terraform code. Normally left blank to use calling ref."
    
    secrets:
      TF_MODULES_SSH_DEPLOY_KEY:
        required: false
        description: "The SSH key used to clone Terraform modules downloaded as part of the Terraform init"
      REPO_SSH_DEPLOY_KEY:
        required: false
        description: "The SSH key used to clone the repo containing the Terraform stacks"

jobs:
  recursive-checks:
    name: Lint and Scan Terraform code
    runs-on: "ubuntu-latest"
    container:
      image: ghcr.io/ukhsa-collaboration/devops-terraform-ci:latest
      # Volume is workaround for https://github.com/actions/runner/issues/716
      volumes:
        - /home/runner/work/_actions/ukhsa-collaboration/devops-github-actions/:/home/runner/work/_actions/ukhsa-collaboration/devops-github-actions/
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          ssh-key: ${{ secrets.REPO_SSH_DEPLOY_KEY }}
  
      - name: Create pending check
        uses: ukhsa-collaboration/devops-github-actions/.github/actions/github-status-check@v0.10.0
        id: create_check
        with:
          name: "Terraform Checks"
          status: "in_progress"
          title: "Terraform code checks"
          summary: "Terraform code checks are currently in-progress"
          details: |
            | Check              | Status                             |
            | :----------------: | :--------------------------------: |
            | Terraform Format   |  :hourglass_flowing_sand: Pending  |
            | Terraform Linting  |  :hourglass_flowing_sand: Pending  |
            | Checkov Scan       |  :hourglass_flowing_sand: Pending  |
              
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Formatting
        id: tf_fmt
        continue-on-error: true
        run: terraform fmt --recursive --check

      - name: Terraform Linting with tflint
        id: tf_lint
        continue-on-error: true
        uses: ukhsa-collaboration/devops-github-actions/.github/actions/terraform-tflint@v0.10.0

      - name: SAST Scan Terraform code
        id: tf_scan
        uses: ukhsa-collaboration/devops-github-actions/.github/actions/terraform-checkov-scan@v0.10.0
        with:
          scan_type: "${{ inputs.checkov_deep_scan && 'deep' || 'light' }}"

      - name: Check step status
        shell: bash
        id: status
        run: |
          if [[ "${{ steps.tf_fmt.outcome }}" == "success" && "${{ steps.tf_lint.outcome }}" == "success" && "${{ steps.tf_scan.outcome }}" == "success" ]]; then
              echo "job_status=success" >> $GITHUB_OUTPUT
          else
              echo "job_status=failure" >> $GITHUB_OUTPUT
          fi

          # Update the individual checks
          tf_fmt=":white_check_mark: Passed" 
          tf_lint=":white_check_mark: Passed"
          tf_scan=":white_check_mark: Passed"
          [[ "${{ steps.tf_fmt.outcome }}" != "success" ]] && tf_fmt=":heavy_exclamation_mark: Failed"
          [[ "${{ steps.tf_lint.outcome }}" != "success" ]] && tf_lint=":heavy_exclamation_mark: Failed"
          [[ "${{ steps.tf_scan.outcome }}" != "success" ]] && tf_scan=":heavy_exclamation_mark: Failed"

          echo "tf_fmt=$tf_fmt" >> $GITHUB_OUTPUT
          echo "tf_lint=$tf_lint" >> $GITHUB_OUTPUT
          echo "tf_scan=$tf_scan" >> $GITHUB_OUTPUT

      - name: Update check with result
        uses: ukhsa-collaboration/devops-github-actions/.github/actions/github-status-check@v0.10.0
        with:
          name: "Terraform Checks"
          status: "completed"
          title: "Terraform code checks"
          summary: "Terraform code checks stack have completed"
          conclusion: "${{ steps.status.outputs.job_status }}"
          check-run-id: ${{ steps.create_check.outputs.check-run-id }}
          details: |
            | Check              | Status              |
            | :----------------- | :-----------------: |
            | Terraform Format   |  ${{ steps.status.outputs.tf_fmt }}  |
            | Terraform Linting  |  ${{ steps.status.outputs.tf_lint }} |
            | Checkov Scan       |  ${{ steps.status.outputs.tf_scan }} |

      - name: End of Workflow
        shell: bash
        if: always()
        run: |
          if [[ ${{ steps.status.outputs.job_status }} == 'success' ]]; then
            exit 0
          else
            exit 1
          fi
